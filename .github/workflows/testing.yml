name: Unit testing
on: [workflow_dispatch, push]
jobs:
  Testing:
    strategy:
      matrix: 
        os: [windows-latest]
        # os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Qt
      uses: anthepro/install-qt-static@v1
      with:
        version: 6.5.0
        configure-args: -opensource -opengl desktop
        submodules: qtbase,qtshadertools,qtdeclarative,qtmultimedia,qttools,qttranslation,qtsvg
    # - name: Install Qt
    #   uses: jurplel/install-qt-action@v3
    #   with:
    #     version: 6.5.0
    #     host: ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' }}
    #     target: desktop
    #     arch: ${{ matrix.os == 'ubuntu-latest' && 'gcc_64' || matrix.os == 'windows-latest' && 'win64_msvc2019_64' }}
    #     modules: qtmultimedia
        # cache: true
        # cache-key-prefix: install-qt
    - name: Get repository code
      uses: actions/checkout@v4.0.0
    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-type: Release
        configure-options: -DTESTING=ON
    - name: Find tests
      uses: mathiasvr/command-output@v2.0.0
      id: tests
      with:
        run: find ${{ runner.workspace }}/build/ -type f -name "*Test"   
    - name: Run tests
      run: |
        export QT_QPA_PLATFORM=offscreen
        ${{ steps.tests.outputs.stdout }}
