name: Deploy Project
on: 
  push:
    branches: main
  workflow_dispatch:
env:
  QT_VERSION: 6.5.2
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{env.QT_VERSION}}
        host: linux
        target: desktop
        arch: gcc_64
        modules: qtmultimedia
        cache: true
        cache-key-prefix: install-qt
    - name: Get repository code
      uses: actions/checkout@v4.0.0
    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-type: Release
        configure-options: -DTESTING=ON
    - name: Find tests
      uses: mathiasvr/command-output@v2.0.0
      id: tests
      with:
        run: find ${{ runner.workspace }}/build/ -type f -name "*Test"   
    - name: Run tests
      run: |
        export QT_QPA_PLATFORM=offscreen
        ${{ steps.tests.outputs.stdout }}
  Build-for-Windows:
    needs: Testing
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4.0.0  
    - name: Install Qt
      uses: jurplel/install-qt-action@v3.3.0
      with:
        host: windows
        target: desktop
        version: ${{env.QT_VERSION}}
        arch: win64_mingw
        dir: ${{github.workspace}}/qt
        modules: qtmultimedia
        cache: true
        cache-key-prefix: install-qt
    - name: Configure CMake Project
      working-directory: ${{github.workspace}}
      run: cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - MinGW Makefiles" -B ${{github.workspace}}\build
    - name: Build project
      working-directory: ${{github.workspace}}\build
      run: mingw32-make.exe
    - name: Install zip
      run: choco install zip -y
    - name: Compress folder
      run: zip -9 -r ${{github.workspace}}\MindMate-Windows.zip ${{github.workspace}}\build\MindMate-Windows
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: Windows-build
        path: ${{github.workspace}}\MindMate-Windows.zip
      # - name: Create Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: x.zip
      #     asset_name: x.zip
      #     asset_content_type: application/zip
  Build-for-Linux:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{env.QT_VERSION}}
        host: linux
        target: desktop
        arch: gcc_64
        modules: qtmultimedia
        cache: true
        cache-key-prefix: install-qt
    - name: Get repository code
      uses: actions/checkout@v4.0.0
    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-type: MinSizeRel
    - name: Compress folder
      run: |
        ls ..
        echo "-------"
        ls ${{github.workspace}}/build/
        tar -czvf ${{github.workspace}}\MindMate-Linux.tar.gz ${{github.workspace}}/
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: Linux-build
        path: ${{github.workspace}}\ MindMate-Linux.tar.gz
