name: Deploy Project
on: 
  push:
    tags: 
      - v[0-9]+.[0-9]+.[0-9]+-beta
    branches: main
  workflow_dispatch:
env:
  QT_VERSION: 6.5.2
  PROJECT_NAME: MindMate
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
    - run: echo ${{github.ref}}
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{env.QT_VERSION}}
        host: linux
        target: desktop
        arch: gcc_64
        modules: qtmultimedia
        cache: true
        cache-key-prefix: install-qt
    - name: Get repository code
      uses: actions/checkout@v4.0.0
    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-type: Release
        configure-options: -DTESTING=ON
    - name: Find tests
      uses: mathiasvr/command-output@v2.0.0
      id: tests
      with:
        run: find ${{runner.workspace}}/build/ -type f -name "*Test"   
    - name: Run tests
      run: |
        export QT_QPA_PLATFORM=offscreen
        ${{ steps.tests.outputs.stdout }}
  Build-for-Linux:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{env.QT_VERSION}}
        host: linux
        target: desktop
        arch: gcc_64
        modules: qtmultimedia
        cache: true
        cache-key-prefix: install-qt
    - name: Get repository code
      uses: actions/checkout@v4.0.0
    - name: Build
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-type: MinSizeRel
    - name: Compress folder
      run: tar -czvf ${{env.PROJECT_NAME}}-Linux.tar.gz -ะก ${{runner.workspace}}/build/src ${{env.PROJECT_NAME}}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: Linux-build
        path: ${{env.PROJECT_NAME}}-Linux.tar.gz
  Build-for-Windows:
    needs: Testing
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4.0.0  
    - name: Install Qt
      uses: jurplel/install-qt-action@v3.3.0
      with:
        host: windows
        target: desktop
        version: ${{env.QT_VERSION}}
        arch: win64_mingw
        dir: ${{github.workspace}}/qt
        modules: qtmultimedia
        cache: true
        cache-key-prefix: install-qt
    - name: Configure CMake Project
      working-directory: ${{github.workspace}}
      run: cmake -DCMAKE_BUILD_TYPE=MinSizeRel -G "CodeBlocks - MinGW Makefiles" -B ${{github.workspace}}\build
    - name: Build project
      working-directory: ${{github.workspace}}\build
      run: mingw32-make.exe
    - name: Install zip
      run: choco install zip -y
    - name: Compress folder
      run: zip -9 -r -j ${{env.PROJECT_NAME}}-Windows.zip ${{github.workspace}}\build\${{env.PROJECT_NAME}}-Windows
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: Windows-build
        path: ${{env.PROJECT_NAME}}-Windows.zip
  Deploy:
    needs: [Build-for-Linux, Build-for-Windows] 
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download a Linux Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: Linux-build
        path: ${{runner.workspace}}
    - name: Download a Windows Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: Windows-build
        path: ${{runner.workspace}}
    - name: Create Release
      uses: ncipollo/release-action@v1.13.0
      with:
        tag: v1.6.0-beta
        artifacts: "${{runner.workspace}}/${{env.PROJECT_NAME}}-Linux.tar.gz, ${{runner.workspace}}/${{env.PROJECT_NAME}}-Windows.zip"
